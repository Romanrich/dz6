import os
import shutil
import zipfile,fnmatch
from sys import argv



BASE_DIR = "C:/Users/Anna/Downloads"
all_files = os.listdir(BASE_DIR)


images_path = os.path.join(BASE_DIR, 'images')
if not os.path.exists(images_path):
    os.makedirs(images_path)


for file in all_files:
    file_path = os.path.join(BASE_DIR, file)
    if file_path.endswith( '.jpg'):
        new_file = os.path.join(images_path, file)
        os.replace(file_path, new_file)
        print (f'Image moved to "images": {file}')

    elif file_path.endswith( '.png'):
        new_file = os.path.join(images_path, file)
        os.replace(file_path, new_file)
        print (f'Image moved to "images": {file}')

    elif file_path.endswith( '.jpeg'):
        new_file = os.path.join(images_path, file)
        os.replace(file_path, new_file)
        print (f'Image moved to "images": {file}')


video_path = os.path.join(BASE_DIR, 'video')
if not os.path.exists(video_path):
    os.makedirs(video_path)


for file in all_files:
    file_path = os.path.join(BASE_DIR, file)
    if file_path.endswith( '.mp4'):
        new_file = os.path.join(video_path, file)
        os.replace(file_path, new_file)
        print (f'Video moved to "video": {file}')


audio_path = os.path.join(BASE_DIR, 'audio')
if not os.path.exists(audio_path):
    os.makedirs(audio_path)


for file in all_files:
    file_path = os.path.join(BASE_DIR, file)
    if file_path.endswith( '.mp3'):
        new_file = os.path.join(audio_path, file)
        os.replace(file_path, new_file)
        print (f'Audio moved to "audio": {file}')


documents_path = os.path.join(BASE_DIR, 'documents')
if not os.path.exists(documents_path):
    os.makedirs(documents_path)


for file in all_files:
    file_path = os.path.join(BASE_DIR, file)
    if file_path.endswith( '.txt'):
        new_file = os.path.join(documents_path, file)
        os.replace(file_path, new_file)
        print (f'Documents moved to "documents": {file}')

    elif file_path.endswith( '.pdf'):
        new_file = os.path.join(documents_path, file)
        os.replace(file_path, new_file)
        print (f'Documents moved to "documents": {file}')


archives_path = os.path.join(BASE_DIR, 'archives')
if not os.path.exists(archives_path):
    os.makedirs(archives_path)


for file in all_files:
    file_path = os.path.join(BASE_DIR, file)
    if file_path.endswith( '.zip'):
        new_file = os.path.join(archives_path, file)
        os.replace(file_path, new_file)
        print (f'archives moved to "archives": {file}')

        
        


rootPath = r"C:/Users/Anna/Downloads/archives"
pattern = '*.zip'
for root, dirs, files in os.walk(rootPath):
    for filename in fnmatch.filter(files, pattern):
        print(os.path.join(root, filename))
        zipfile.ZipFile(os.path.join(root, filename)).extractall(os.path.join(root, os.path.splitext(filename)[0]))

        
def latinizator(letter, dic):
    for i, j in dic.items():
        letter = letter.replace(i, j)
    return letter
file_old = 'C:/Users/Anna/Downloads'
legend = {
' ':'_',
',':'',
'а':'a',
'б':'b',
'в':'v',
'г':'g',
'д':'d',
'е':'e',
'ё':'yo',
'ж':'zh',
'з':'z',
'и':'i',
'й':'y',
'к':'k',
'л':'l',
'м':'m',
'н':'n',
'о':'o',
'п':'p',
'р':'r',
'с':'s',
'т':'t',
'у':'u',
'ф':'f',
'х':'h',
'ц':'c',
'ч':'ch',
'ш':'sh',
'щ':'shch',
'ъ':'y',
'ы':'y',
'ь':"'",
'э':'e',
'ю':'yu',
'я':'ya',

'А':'A',
'Б':'B',
'В':'V',
'Г':'G',
'Д':'D',
'Е':'E',
'Ё':'Yo',
'Ж':'Zh',
'З':'Z',
'И':'I',
'Й':'Y',
'К':'K',
'Л':'L',
'М':'M',
'Н':'N',
'О':'O',
'П':'P',
'Р':'R',
'С':'S',
'Т':'T',
'У':'U',
'Ф':'F',
'Х':'H',
'Ц':'Ts',
'Ч':'Ch',
'Ш':'Sh',
'Щ':'Shch',
'Ъ':'Y',
'Ы':'Y',
'Ь':"'",
'Э':'E',
'Ю':'Yu',
'Я':'Ya',
}

for file_old in os.listdir('.'):

    file_new = latinizator(file_old, legend)

    #Раскомментируйте, чтобы сделать первую букву в имени файла Прописной
    #file_new = file_new.capitalize()

    if '-p' in argv:
        if file_old == file_new:
            print ('{0: <30}'.format(file_old), 'не будет переименован' )
        else:
            print ('{0: <30}'.format(file_old), 'будет переименован в ', file_new )
    else:
        if file_old != file_new:
            print ('{0: <30}'.format(file_old), 'переименован в ', file_new )
            os.rename(file_old, file_new)

    

print('Done!')
